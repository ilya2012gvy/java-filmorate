CREATE TABLE if NOT EXISTS films (
    film_id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100),
    description varchar(100),
    release_date date,
    duration INTEGER,
    rating_id INTEGER REFERENCES rating (rating_id) ON UPDATE CASCADE
);

CREATE TABLE if NOT EXISTS users (
    user_id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(100),
    login varchar(100),
    name varchar(100),
    birthday date
);

CREATE TABLE if NOT EXISTS rating (
    rating_id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100),
    description varchar(100)
);

CREATE TABLE if NOT EXISTS films_genre (
    genre_id INTEGER REFERENCES genre (genre_id) ON UPDATE CASCADE,
    film_id INTEGER REFERENCES films (film_id) ON UPDATE CASCADE,
    primary key (genre_id, film_id)
);

CREATE TABLE if NOT EXISTS genre (
    genre_id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100)
);

CREATE TABLE if NOT EXISTS friends (
    friend_id INTEGER REFERENCES films (film_id) ON UPDATE CASCADE,
    user_id INTEGER REFERENCES users (user_id) ON UPDATE CASCADE,
    status varchar(100)
);

CREATE TABLE if NOT EXISTS likes (
    film_id INTEGER REFERENCES films (film_id) ON UPDATE CASCADE,
    user_id INTEGER REFERENCES users (user_id) ON UPDATE CASCADE
);